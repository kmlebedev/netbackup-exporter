/*
 * NetBackup Administration API
 *
 * The NetBackup Administration API provides access to administrative operations in NetBackup.
 *
 * API version: 4.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"time"
)

type ManualBackupResponseAttributes struct {
	// The job identifier.
	JobId int32 `json:"jobId,omitempty"`
	// The percentage of optimization achieved if the job uses NetBackup Accelerator.
	AcceleratorOptimization int32 `json:"acceleratorOptimization,omitempty"`
	// The identifier of the active process.
	ActiveProcessId int32 `json:"activeProcessId,omitempty"`
	// A UTC timestamp of when the current try started.
	ActiveTryStartTime time.Time `json:"activeTryStartTime,omitempty"`
	// The application type.
	ApplicationType string `json:"applicationType,omitempty"`
	// The domain name for auditing.
	AuditDomainName string `json:"auditDomainName,omitempty"`
	// The auditing domain type.   0=INVALID,   1=ACTIVE_DIRECTORY,   2=NIS_PLUS,   3=VXAT_PRIVATE,   4=UNIX_PASSWORD,   5=NIS,   6=LOCAL_HOST,   7=UNKNOWN_AUTH
	AuditDomainType int32 `json:"auditDomainType,omitempty"`
	// The user name in the audit record.
	AuditUserName string `json:"auditUserName,omitempty"`
	// The GUID of the asset for which the job was started.
	AssetID string `json:"assetID,omitempty"`
	// The displayable name of the asset for which the job was started.
	AssetDisplayableName string `json:"assetDisplayableName,omitempty"`
	// The backup ID or image ID.
	BackupId string `json:"backupId,omitempty"`
	// The name of the client to protect.
	ClientName string `json:"clientName,omitempty"`
	// Indicates if compression is enabled for the backup policy.   0=disabled,   1=enabled
	Compression int32 `json:"compression,omitempty"`
	// The host from which the job was initiated.
	ControlHost string `json:"controlHost,omitempty"`
	// The copy number of the backup image.
	CopyNumber int32 `json:"copyNumber,omitempty"`
	// The file currently being protected.
	CurrentFile string `json:"currentFile,omitempty"`
	// The operation currently being performed. A value of -99 indicates that an invalid value was returned.   0=MOUNTING,   1=POSITIONING,   2=CONNECTING,   3=WRITING,   4=VLT_INIT,   5=VLT_DUPIMG,   6=VLT_DUPCMP,   7=VLT_BK_NBCAT,   8=VLT_EJRPT,   9=VLT_COMPLETE,   10=READING,   11=DUPLICATE,   12=IMPORT,   13=VERIFY,   14=RESTORE,   15=BACKUPDB,   16=VAULT,   17=LABEL,   18=ERASE,   19=SYNTH_DBQUERY,   20=SYNTH_PROCESS_EXTENTS,   21=SYNTH_PLAN,   22=CREATE_SNAPSHOT,   23=DELETE_SNAPSHOT,   24=RECOVERDB,   25=MCONTENTS,   26=SYNTH_REQUERESOURCES,   27=PARENT_JOB,   28=INDEXING,   29=REPLICATE,   30=RUNNING,   31=ASSEMBLING_FILE_LIST,   32=ALLOCATING_MEDIA
	CurrentOperation int64 `json:"currentOperation,omitempty"`
	// The type of data movement used for this job.
	DataMovement string `json:"dataMovement,omitempty"`
	// The deduplication rate that was achieved.
	DedupRatio float32 `json:"dedupRatio,omitempty"`
	// The destination media server. Used for deduplication jobs.
	DestinationMediaId string `json:"destinationMediaId,omitempty"`
	// The destination storage unit. Used for deduplication jobs.
	DestinationStorageUnitName string `json:"destinationStorageUnitName,omitempty"`
	// The destination media server name. Used for deduplication jobs.
	DestinationMediaServerName string `json:"destinationMediaServerName,omitempty"`
	// The recovery appliance host name for Copilot.
	DumpHost string `json:"dumpHost,omitempty"`
	// The time that has elapsed since the start of the job.
	ElapsedTime string `json:"elapsedTime,omitempty"`
	// The time that the job ended.
	EndTime time.Time `json:"endTime,omitempty"`
	// The estimated number of files to protect.
	EstimatedFiles int32 `json:"estimatedFiles,omitempty"`
	// Indicates if the job type is a snapshot. This property is used internally.
	FrozenImage int32 `json:"frozenImage,omitempty"`
	// The initiator of the job.
	InitiatorId string `json:"initiatorId,omitempty"`
	// The name of the database instance or the database.
	InstanceDatabaseName string `json:"instanceDatabaseName,omitempty"`
	// The name of the group that initiated the job.
	JobGroup string `json:"jobGroup,omitempty"`
	// The job owner or the user that initiated the job.
	JobOwner string `json:"jobOwner,omitempty"`
	// The reason the job is queued. A value of -99 indicates that an invalid value was returned.   1=MEDIA_IN_USE,   2=DRIVES_IN_USE,   3=MEDIA_SERVER_OFFLINE,   4=ROBOT_DOWN,   5=MAX_STORAGE_UNIT_JOBS,   6=MEDIA_REQUEST_DELAY,   7=LOCAL_DRIVES_DOWN,   8=MEDIA_IN_DRIVE_IN_USE,   9=PHYSICAL_DRIVE_UNAVAILABLE,   10=CLEANING_MEDIA_UNAVAILABLE,   11=DRIVE_SCAN_HOST_OFFLINE,   12=DISK_MEDIA_SERVER_OFFLINE,   13=NO_MASTER_MEDIA_CONNECTIVITY,   14=MEDIA_SERVER_NON_ACTIVE_MODE,   15=STORAGEUNIT_JOB_COUNTS_THROTTLED,   16=JOB_HISTORY_DRIVES_IN_USE,   17=DISK_VOLUME_UNAVAILABLE,   18=MAX_CONCURRENT_VOLUME_READERS,   19=DISK_GROUP_UNAVAILABLE,   20=FAT_PIPE_IN_USE,   21=DISK_VOLUME_UNMOUNTING,   22=DISK_VOLUME_IN_USE,   23=MAX_PARTIAL_MEDIA,   24=LOGICAL_RESOURCE,   25=DRIVES_IN_STORAGE_UNIT_IN_USE,   26=STOP_DRIVE_SCAN,   27=DISK_VOLUME_MOUNTING,   28=MOUNT_FILE_EXISTS,   29=PENDING_ACTION,   30=DISK_VOLUME_STREAM_LIMIT
	JobQueueReason int64 `json:"jobQueueReason,omitempty"`
	// The name of the resource for which the queued job is waiting.
	JobQueueResource string `json:"jobQueueResource,omitempty"`
	// The job subtype.
	JobSubType string `json:"jobSubType,omitempty"`
	// The job type.
	JobType string `json:"jobType,omitempty"`
	// Indicates if the job can be stopped.
	Cancellable int32 `json:"cancellable,omitempty"`
	// The actual data transferred, in kilobytes. For some jobs, data transferred is different than the final image size.
	KilobytesDataTransferred int32 `json:"kilobytesDataTransferred,omitempty"`
	// The remaining kilobytes to transfer.
	KilobytesToTransfer int32 `json:"kilobytesToTransfer,omitempty"`
	// The estimated amount of data transferred, in kilobytes.
	KilobytesTransferred int32 `json:"kilobytesTransferred,omitempty"`
	// The UTC timestamp when the job was modified.
	LastUpdateTime time.Time `json:"lastUpdateTime,omitempty"`
	// The process ID of the main controlling process for restore and image cleanup.
	MainProcessId int32 `json:"mainProcessId,omitempty"`
	// The actual number of files protected.
	NumberOfFiles int32 `json:"numberOfFiles,omitempty"`
	// For Vault jobs, the total number of tape media to eject.
	NumberOfTapeToEject int32 `json:"numberOfTapeToEject,omitempty"`
	// The Offhost type.
	OffHostType string `json:"offHostType,omitempty"`
	// The parent job ID.
	ParentJobId int32 `json:"parentJobId,omitempty"`
	// The estimate (as a percentage) of when the job will be completed.
	PercentComplete int32 `json:"percentComplete,omitempty"`
	// The name of the policy used by this job.
	PolicyName string `json:"policyName,omitempty"`
	// The backup policy type.
	PolicyType string `json:"policyType,omitempty"`
	// The priority of this job.
	Priority int32 `json:"priority,omitempty"`
	// The name of the Vault profile.
	ProfileName string `json:"profileName,omitempty"`
	// Indicates if the job can be restarted.
	Restartable int32 `json:"restartable,omitempty"`
	// The list of backup IDs needed for the restore job.
	RestoreBackupIDs string `json:"restoreBackupIDs,omitempty"`
	// Indicates if the job can be resumed.
	Resumable int32 `json:"resumable,omitempty"`
	// The retention level of the backup image.
	RetentionLevel int32 `json:"retentionLevel,omitempty"`
	// The name of the robot in the Vault job.
	RobotName string `json:"robotName,omitempty"`
	// The name of the backup schedule used by the backup job.
	ScheduleName string `json:"scheduleName,omitempty"`
	// The type of schedule used by the backup job.
	ScheduleType string `json:"scheduleType,omitempty"`
	// The Vault session ID.
	SessionId int32 `json:"sessionId,omitempty"`
	// The source media ID for the duplication job.
	SourceMediaId string `json:"sourceMediaId,omitempty"`
	// The name of the source media server for the duplication job.
	SourceMediaServerName string `json:"sourceMediaServerName,omitempty"`
	// The name of the source storage unit.
	SourceStorageUnitName string `json:"sourceStorageUnitName,omitempty"`
	// The UTC timestamp when the job was started.
	StartTime time.Time `json:"startTime,omitempty"`
	// The current state of the job.
	State string `json:"state,omitempty"`
	// The final job status code.
	Status int32 `json:"status,omitempty"`
	// The stream number of the job.
	StreamNumber int32 `json:"streamNumber,omitempty"`
	// The job submission type.
	SubmissionType int32 `json:"submissionType,omitempty"`
	// Indicates if the job can be suspended.
	Suspendable int32 `json:"suspendable,omitempty"`
	// The data transfer rate in kilobytes (KB) per second.
	TransferRate int32 `json:"transferRate,omitempty"`
	// The data transport type used for the job.
	TransportType string `json:"transportType,omitempty"`
	// The current try number to execute this job.
	Try int32 `json:"try,omitempty"`
	// The Vault name used by the job.
	VaultName string `json:"vaultName,omitempty"`
}
